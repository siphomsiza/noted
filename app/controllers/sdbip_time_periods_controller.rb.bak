class SdbipTimePeriodsController < ApplicationController
  def index
    @sdbip_time_periods = SdbipTimePeriod.paginate( page: params[:page],per_page: 50)
  end

  def show
    @sdbip_time_period = SdbipTimePeriod.find(params[:id])
  end

  def new
    @sdbip_time_period = SdbipTimePeriod.new
  end

  def create 
    @sdbip_time_period = SdbipTimePeriod.new(sdbip_time_period_params)
    if @sdbip_time_period.save
 @user = User.find_by(params[:id])
    if @user
      @user.update_kpi
      flash[:info] = "KPI Update reminder email sent"
      #redirect_to root_url
    else
      flash.now[:danger] = "Email address not found"
      
      #redirect_to sdbip_time_periods_path, :notice => "Sdbip Time Period"
    end
	flash[:success]="Sdbip Time Period was successfully created"
      redirect_to sdbip_time_periods_path
    else
      render "new"
    end
  end

  def edit
    @sdbip_time_period = SdbipTimePeriod.find(params[:id])
     
  end

  def update
        @sdbip_time_period = SdbipTimePeriod.find(params[:id])

    if @sdbip_time_period.update_attributes(sdbip_time_period_params)
      redirect_to sdbip_time_periods_path, :notice => "Sdbip Time Period was successfully updated"
    else
      render "edit"
    end
  end

  def destroy
    @sdbip_time_period = SdbipTimePeriod.find(params[:id])
    @sdbip_time_period.destroy
      redirect_to sdbip_time_periods_path, :notice => "Sdbip Time Period was successfully deleted"
  end




  private
    def sdbip_time_period_params
        params.require(:sdbip_time_period).permit(:sdbip_id, :period, :start_date, :end_date, 
          :status)
    end
end
